{"version":3,"sources":["actions/game.js","actions/settings.js","gameOptions/gameOptions.js","components/StartMenu.js","containers/StartMenu.js","components/Game.js","containers/Game.js","components/Settings.js","containers/Settings.js","App.js","containers/App.js","serviceWorker.js","reducers/settings.js","reducers/game.js","reducers/index.js","index.js"],"names":["createAction","DIFFICULTY","easy","medium","hard","CERTIFICATES","SKILLS","BOSSES","StartMenu","difficulty","mapWidth","mapHeight","viewportWidth","generateItems","getRandomNumber","startGame","showSettings","className","type","onClick","playerX","map","generatedMap","numberOfWalls","Math","ceil","console","log","i","generatedRowMap","wallVar","randomSquare","j","push","bosses","bossesInterval","floor","bossVar","bossY","bossX","bw","b","generateBosses","generateMap","connect","state","gameOptions","settings","dispatch","ActionsGame","ActionsSettings","Game","gameMap","currentCertificates","currentSkills","isDefeatedBoss","level","points","currentOffsetX","currentOffsetY","playerY","viewportHeight","moveLeft","moveUp","moveRight","moveDown","changeOffsetX","changeOffsetY","addCertificate","startLevel2","addSkill","removeBossWalls","addPointsBoss","quitGame","endGame","windowHeight","useState","message","setMessage","squareSize","timeoutFunc","item","messageText","time","timeout","setTimeout","clearTimeout","addItems","mapCoordinates","slice","round","calculatePoints","forEach","rowMap","rowIndex","square","squareIndex","factor","_quitGame","window","confirm","useEffect","handleWindowKeyDown","e","key","length","addEventListener","removeEventListener","value","max","visibleMap","y","visibleRowsMap","style","width","height","renderMap","game","certificates","skills","newPlayerX","newPlayerY","Settings","difficultyOptions","backToStartMenu","saveSettings","difficultyInner","setDifficultyInner","mapHeightInner","setMapHeightInner","viewportHeightInner","setViewportHeightInner","_change","name","target","onSubmit","preventDefault","htmlFor","id","onChange","bind","this","min","step","App","isSettingsShow","gameOn","document","documentElement","clientHeight","items","itemClass","itemsInterval","itemVar","itemsBalance","itemY","itemX","isWall","x","random","Boolean","location","hostname","match","settingsReducer","handleActions","action","update","$merge","payload","initialState","gameReducer","$set","combineReducers","store","createStore","reducer","applyMiddleware","logger","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f9efe24d.chunk.js","sourcesContent":["import {createAction} from 'redux-actions';\n\nexport default {\n    'GAME/START_GAME': createAction('GAME/START_GAME'),\n    'GAME/MOVE_LEFT': createAction('GAME/MOVE_LEFT'),\n    'GAME/MOVE_UP': createAction('GAME/MOVE_UP'),\n    'GAME/MOVE_RIGHT': createAction('GAME/MOVE_RIGHT'),\n    'GAME/MOVE_DOWN': createAction('GAME/MOVE_DOWN'),\n    'GAME/CHANGE_OFFSET_X': createAction('GAME/CHANGE_OFFSET_X'),\n    'GAME/CHANGE_OFFSET_Y': createAction('GAME/CHANGE_OFFSET_Y'),\n    'GAME/ADD_CERTIFICATE': createAction('GAME/ADD_CERTIFICATE'),\n    'GAME/START_LEVEL2': createAction('GAME/START_LEVEL2'),\n    'GAME/ADD_SKILL': createAction('GAME/ADD_SKILL'),\n    'GAME/REMOVE_BOSS_WALLS': createAction('GAME/REMOVE_BOSS_WALLS'),\n    'GAME/ADD_POINTS_BOSS': createAction('GAME/ADD_POINTS_BOSS'),\n    'GAME/QUIT_GAME': createAction('GAME/QUIT_GAME'),\n    'GAME/END_GAME': createAction('GAME/END_GAME'),\n};","import {createAction} from 'redux-actions';\n\nexport default {\n    'SETTINGS/SHOW_SETTINGS': createAction('SETTINGS/SHOW_SETTINGS'),\n    'SETTINGS/HIDE_SETTINGS': createAction('SETTINGS/HIDE_SETTINGS'),\n    'SETTINGS/SAVE_SETTINGS': createAction('SETTINGS/SAVE_SETTINGS'),\n};","export default {\n    DIFFICULTY: {\n        easy: 20,\n        medium: 25,\n        hard: 30,\n    },\n    CERTIFICATES: 25,\n    SKILLS: 3,\n    BOSSES: 1,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction StartMenu(\n    {\n        CERTIFICATES,\n        BOSSES,\n\n        difficulty,\n        mapWidth,\n        mapHeight,\n        viewportWidth,\n\n        generateItems,\n        getRandomNumber,\n\n        startGame,\n        showSettings,\n    }\n) {\n    const PLAYER = 'player';\n    const WALL = 'wall';\n    const EMPTY = 'empty';\n    const BOSS_WALL = 'boss-wall';\n    const BOSS = 'boss';\n    const CERTIFICATE = 'certificate';\n\n    function _startGame() {\n        let playerX = getRandomNumber(0, viewportWidth - 1);\n        let map = generateMap(playerX);\n        console.log(map, playerX);\n        startGame({map, playerX});\n    }\n\n    function generateMap(playerX) {\n        let generatedMap = [];\n        let numberOfWalls = Math.ceil(mapWidth * difficulty / 100);\n        console.log(numberOfWalls);\n        for (let i = 0; i < mapHeight; i++) {\n            let generatedRowMap = [];\n\n            if (i === 0) {\n                generatedRowMap[playerX] = PLAYER;\n            }\n\n            let wallVar = 0;\n            while (wallVar < numberOfWalls) {\n                let randomSquare = getRandomNumber(0, mapWidth - 1);\n                if (generatedRowMap[randomSquare] !== WALL && generatedRowMap[randomSquare] !== PLAYER &&\n                    !(i === 1 && randomSquare === playerX)) {\n                    generatedRowMap[randomSquare] = WALL;\n                    wallVar++;\n                }\n            }\n\n            for (let j = 0; j < mapWidth; j++) {\n                if (!generatedRowMap[j]) {\n                    generatedRowMap[j] = EMPTY;\n                }\n            }\n            generatedMap.push(generatedRowMap);\n        }\n\n        generateBosses(generatedMap, BOSSES);\n        generateItems(generatedMap, CERTIFICATES, CERTIFICATE);\n\n        return generatedMap;\n    }\n\n    function generateBosses(map, bosses) {\n        let bossesInterval = Math.floor(mapHeight / bosses);\n        let bossVar = 0;\n        console.log(bossesInterval);\n        while (bossVar < mapHeight - 1) {\n            let bossY = getRandomNumber(bossVar + 1, bossVar + bossesInterval - 5);\n            let bossX = getRandomNumber(0, mapWidth - 5);\n            console.log(bossVar);\n            for (let bw = 1; bw < 4; bw++) {\n                map[bossY][bossX] = BOSS_WALL;\n                map[bossY + bw][bossX] = BOSS_WALL;\n                map[bossY][bossX + bw] = BOSS_WALL;\n                map[bossY + bw][bossX + 3] = BOSS_WALL;\n                map[bossY + 3][bossX + bw] = BOSS_WALL;\n            }\n            for (let b = 1; b < 3; b++) {\n                map[bossY + 1][bossX + b] = BOSS;\n                map[bossY + 2][bossX + b] = BOSS;\n            }\n            bossVar += bossesInterval;\n        }\n    }\n\n    return (\n        <div className=\"start-container\">\n            <h1>Dungeon Crawl</h1>\n            <div className=\"start-menu\">\n                <button type=\"button\" onClick={_startGame}>Start Game</button>\n                <button type=\"button\" onClick={showSettings}>Settings</button>\n            </div>\n        </div>\n    );\n}\n\nStartMenu.propTypes = {\n    showSettings: PropTypes.func.isRequired,\n    startGame: PropTypes.func.isRequired,\n    CERTIFICATES: PropTypes.number.isRequired,\n    BOSSES: PropTypes.number.isRequired,\n    difficulty: PropTypes.number.isRequired,\n    mapWidth: PropTypes.number.isRequired,\n    mapHeight: PropTypes.number.isRequired,\n    generateItems: PropTypes.func.isRequired,\n    getRandomNumber: PropTypes.func.isRequired,\n};\n\nexport default StartMenu;","import {connect} from 'react-redux';\nimport ActionsGame from \"../actions/game\";\nimport ActionsSettings from \"../actions/settings\";\nimport gameOptions from \"../gameOptions/gameOptions\";\nimport StartMenu from \"../components/StartMenu\";\n\nconst mapStateToProps = state => {\n    return {\n        CERTIFICATES: gameOptions.CERTIFICATES,\n        BOSSES: gameOptions.BOSSES,\n        difficulty: state.settings.difficulty,\n        mapWidth: state.settings.mapWidth,\n        mapHeight: state.settings.mapHeight,\n        viewportWidth: state.settings.viewportWidth,\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        startGame: ({map, playerX}) => dispatch(ActionsGame[\"GAME/START_GAME\"]({map, playerX})),\n        showSettings: () => dispatch(ActionsSettings[\"SETTINGS/SHOW_SETTINGS\"]()),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StartMenu);","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Game(\n    {\n        CERTIFICATES,\n        SKILLS,\n\n        gameMap,\n        currentCertificates,\n        currentSkills,\n        isDefeatedBoss,\n        level,\n        points,\n        currentOffsetX,\n        currentOffsetY,\n        playerX,\n        playerY,\n\n        difficulty,\n        mapWidth,\n        mapHeight,\n        viewportWidth,\n        viewportHeight,\n\n        moveLeft,\n        moveUp,\n        moveRight,\n        moveDown,\n        changeOffsetX,\n        changeOffsetY,\n        addCertificate,\n        startLevel2,\n        addSkill,\n        removeBossWalls,\n        addPointsBoss,\n        quitGame,\n        endGame,\n\n        windowHeight,\n        generateItems,\n    }\n) {\n    const [message, setMessage] = useState('');\n\n    const EMPTY = 'empty';\n    const WALL = 'wall';\n    const BOSS_WALL = 'boss-wall';\n    const BOSS = 'boss';\n    const SKILL = 'skill';\n    const CERTIFICATE = 'certificate';\n\n    const BEFORE_BORDER = 3;\n\n    const ARROW_LEFT = 'ArrowLeft';\n    const ARROW_UP = 'ArrowUp';\n    const ARROW_RIGHT = 'ArrowRight';\n    const ARROW_DOWN = 'ArrowDown';\n    const ESCAPE = 'Escape';\n\n    const squareSize = Math.floor((windowHeight * 51) / (100 * viewportHeight));\n    console.log('squareSize',squareSize);\n\n    useEffect(() => {\n        if (!isDefeatedBoss) {\n            function handleWindowKeyDown(e) {\n                switch (e.key) {\n                    case ARROW_LEFT:\n                        console.log(ARROW_LEFT);\n                        if (playerX === 0 && gameMap[playerY][mapWidth - 1] !== WALL && gameMap[playerY][mapWidth - 1] !== BOSS_WALL) {\n                            changeOffsetX((mapWidth - 1) - (viewportWidth - 1) );\n                            addItems(gameMap[playerY][mapWidth - 1]);\n                            moveLeft(mapWidth - 1);\n                            break;\n                        }\n                        if (playerX !== 0 && gameMap[playerY][playerX - 1] !== WALL && gameMap[playerY][playerX - 1] !== BOSS_WALL) {\n                            if ((playerX <= BEFORE_BORDER + currentOffsetX) && !(playerX <= BEFORE_BORDER)) {\n                                changeOffsetX(currentOffsetX - 1);\n                            }\n                            addItems(gameMap[playerY][playerX - 1]);\n                            moveLeft(playerX - 1);\n                            break;\n                        }\n                        break;\n                    case ARROW_UP:\n                        console.log(ARROW_UP);\n                        if (playerY === 0) {\n                            break;\n                        }\n                        if (gameMap[playerY - 1][playerX] !== WALL && gameMap[playerY - 1][playerX] !== BOSS_WALL) {\n                            if ((playerY <= BEFORE_BORDER + currentOffsetY) && !(playerY <= BEFORE_BORDER)) {\n                                changeOffsetY(currentOffsetY - 1);\n                            }\n                            addItems(gameMap[playerY - 1][playerX]);\n                            moveUp(playerY - 1);\n                            break;\n                        }\n                        break;\n                    case ARROW_RIGHT:\n                        console.log(ARROW_RIGHT);\n                        if (playerX === mapWidth - 1 && gameMap[playerY][0] !== WALL && gameMap[playerY][0] !== BOSS_WALL) {\n                            changeOffsetX(0);\n                            addItems(gameMap[playerY][0]);\n                            moveLeft(0);\n                            break;\n                        }\n                        if (playerX !== mapWidth - 1 && gameMap[playerY][playerX + 1] !== WALL && gameMap[playerY][playerX + 1] !== BOSS_WALL) {\n                            if ((playerX >= (viewportWidth - 1) - BEFORE_BORDER + currentOffsetX) && !(playerX >= (mapWidth - 1) - BEFORE_BORDER)) {\n                                changeOffsetX(currentOffsetX + 1);\n                            }\n                            addItems(gameMap[playerY][playerX + 1]);\n                            moveRight(playerX + 1);\n                            break;\n                        }\n                        break;\n                    case ARROW_DOWN:\n                        console.log(ARROW_DOWN);\n                        if (playerY === gameMap.length - 1) {\n                            break;\n                        }\n                        if (gameMap[playerY + 1][playerX] !== WALL && gameMap[playerY + 1][playerX] !== BOSS_WALL) {\n                            if ((playerY >= (viewportHeight - 1) - BEFORE_BORDER + currentOffsetY) && !(playerY >= (mapHeight - 1) - BEFORE_BORDER)) {\n                                changeOffsetY(currentOffsetY + 1);\n                            }\n                            addItems(gameMap[playerY + 1][playerX]);\n                            moveDown(playerY + 1);\n                            break;\n                        }\n                        break;\n                    case ESCAPE:\n                        console.log('Quit Game');\n                        _quitGame()\n                        break;\n                    default: break;\n                }\n            }\n\n            window.addEventListener('keydown', handleWindowKeyDown);\n            return () => window.removeEventListener('keydown', handleWindowKeyDown);\n        }\n    }, [playerX, playerY]);\n\n    useEffect(() => {\n        timeoutFunc(currentCertificates,'+1 certificate', 500);\n    },[currentCertificates]);\n\n    useEffect(() => {\n        timeoutFunc(currentSkills,'+1 skill', 500);\n    },[currentSkills]);\n\n    function timeoutFunc(item, messageText, time) {\n        if (item > 0) {\n            setMessage(messageText);\n            const timeout = setTimeout(() => {\n                setMessage('');\n            }, time);\n\n            return () => clearTimeout(timeout);\n        }\n    }\n\n    function addItems(mapCoordinates) {\n        if (mapCoordinates === CERTIFICATE) {\n            if (currentCertificates === CERTIFICATES - 1) {\n                let map = gameMap.slice();\n                console.log(`map`, map);\n                generateItems(map, SKILLS, SKILL);\n                console.log(`map`, map);\n                startLevel2({map});\n            }\n            addCertificate(Math.round(calculatePoints(1)));\n        }\n        if (mapCoordinates === SKILL) {\n            if (currentSkills === SKILLS - 1) {\n                let map = gameMap.slice();\n                console.log(`map`, map);\n                map.forEach((rowMap, rowIndex) => rowMap.forEach((square, squareIndex) => {\n                    if (square === BOSS_WALL) {\n                        console.log(`square-change`, square);\n                        map[rowIndex][squareIndex] = EMPTY;\n                    }\n                }));\n                console.log(`map`, map);\n                removeBossWalls({map});\n            }\n            addSkill(Math.round(calculatePoints(10)));\n        }\n        if (mapCoordinates === BOSS) {\n            addPointsBoss(Math.round(calculatePoints(30)));\n            endGame();\n        }\n    }\n\n    function calculatePoints(factor) {\n        return (factor * difficulty * (mapHeight / 100) * (10 / viewportHeight))\n    }\n\n    function _quitGame() {\n        if (window.confirm('Are you sure you want to quit?')) {\n            quitGame();\n        }\n    }\n    \n    function renderMap() {\n        let visibleMap = [];\n        for (let y = currentOffsetY; y < currentOffsetY + viewportHeight; y++) {\n            let visibleRowsMap = gameMap[y].slice(currentOffsetX, currentOffsetX + viewportWidth);\n            visibleMap.push(visibleRowsMap);\n        }\n        console.log('visibleMap', visibleMap);\n        console.log('currentOffsetY', currentOffsetY);\n        console.log('currentOffsetX', currentOffsetX);\n\n        return (\n            visibleMap.map((rowMap, rowIndex) => {\n                return (\n                    <div className={\n                        rowIndex + currentOffsetY === 0 ? \"row-map first\" : rowIndex + currentOffsetY === (mapHeight - 1) ? \"row-map last\" : \"row-map\"\n                    } key={rowIndex + currentOffsetY}>\n                        {\n                            rowMap.map((square, squareIndex) => {\n                                return (\n                                    <div className={`square ${square}`} key={`${rowIndex + currentOffsetY}${squareIndex + currentOffsetX}`} style={{width: `${squareSize}px`, height: `${squareSize}px`}}></div>\n                                )\n                            })\n                        }\n                    </div>\n                )\n            })\n        )\n    }\n\n    function renderGameOver() {\n        return (\n            <div className=\"game-over\">\n                <p>Congratulations!</p>\n                <p>You left the dungeon!</p>\n                <p className=\"result\">Your result: {points} points.</p>\n            </div>\n        )\n    }\n    \n    return (\n        <div className=\"game\">\n            <div className=\"top-bar-head\">\n                <h2>Dungeon Crawl</h2>\n                <button className=\"btn-quit\" type=\"text\" onClick={_quitGame}>Quit Game</button>\n            </div>\n            <div className=\"top-bar\">\n                <div className=\"top-bar-stats\">\n                    <div>Level: <span>{level}</span></div>\n                    <div>\n                        <p>Certificates: <span>{currentCertificates}/{CERTIFICATES}</span></p>\n                        <progress value={currentCertificates} max={CERTIFICATES}></progress>\n                    </div>\n                    <div>\n                        <p>Skills: <span>{currentSkills}/{SKILLS}</span></p>\n                        <progress value={currentSkills} max={SKILLS}></progress>\n                    </div>\n                    <div>Points: <span>{points}</span></div>\n                </div>\n                <div className=\"messages\">\n                    <p>{message}</p>\n                    { level === 1 && <p>Collect 25 certificates.</p> }\n                    { level === 2 && currentSkills < SKILLS && <p>Collect 3 skills.</p> }\n                    { level === 2 && currentSkills === SKILLS && !isDefeatedBoss && <p>Find the boss.</p> }\n                </div>\n            </div>\n            <div className=\"map\">\n                { !isDefeatedBoss ? renderMap() : renderGameOver() }\n            </div>\n            <div className=\"bottom-bar\">\n                <div>\n                    <p>Press 'Arrows' on the keyboard to move.</p>\n                    <p>Press 'Esc' to quit the game or click the button at the top right.</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nGame.propTypes = {\n    CERTIFICATES: PropTypes.number.isRequired,\n    SKILLS: PropTypes.number.isRequired,\n    gameMap: PropTypes.arrayOf(PropTypes.array).isRequired,\n    currentCertificates: PropTypes.number.isRequired,\n    currentSkills: PropTypes.number.isRequired,\n    isDefeatedBoss: PropTypes.bool.isRequired,\n    level: PropTypes.number.isRequired,\n    points: PropTypes.number.isRequired,\n    currentOffsetX: PropTypes.number.isRequired,\n    currentOffsetY: PropTypes.number.isRequired,\n    playerX: PropTypes.number.isRequired,\n    playerY: PropTypes.number.isRequired,\n    difficulty: PropTypes.number.isRequired,\n    mapWidth: PropTypes.number.isRequired,\n    mapHeight: PropTypes.number.isRequired,\n    viewportWidth: PropTypes.number.isRequired,\n    viewportHeight: PropTypes.number.isRequired,\n    moveLeft: PropTypes.func.isRequired,\n    moveUp: PropTypes.func.isRequired,\n    moveRight: PropTypes.func.isRequired,\n    moveDown: PropTypes.func.isRequired,\n    changeOffsetX: PropTypes.func.isRequired,\n    changeOffsetY: PropTypes.func.isRequired,\n    addCertificate: PropTypes.func.isRequired,\n    startLevel2: PropTypes.func.isRequired,\n    addSkill: PropTypes.func.isRequired,\n    removeBossWalls: PropTypes.func.isRequired,\n    addPointsBoss: PropTypes.func.isRequired,\n    quitGame: PropTypes.func.isRequired,\n    endGame: PropTypes.func.isRequired,\n    windowHeight: PropTypes.number.isRequired,\n    generateItems: PropTypes.func.isRequired,\n};\n\nexport default Game;","import {connect} from 'react-redux';\nimport ActionsGame from \"../actions/game\";\nimport gameOptions from \"../gameOptions/gameOptions\";\nimport Game from \"../components/Game\";\n\nconst mapStateToProps = state => {\n    return {\n        CERTIFICATES: gameOptions.CERTIFICATES,\n        SKILLS: gameOptions.SKILLS,\n\n        gameMap: state.game.map,\n        currentCertificates: state.game.certificates,\n        currentSkills: state.game.skills,\n        isDefeatedBoss: state.game.isDefeatedBoss,\n        level: state.game.level,\n        points: state.game.points,\n        currentOffsetX: state.game.currentOffsetX,\n        currentOffsetY: state.game.currentOffsetY,\n        playerX: state.game.playerX,\n        playerY: state.game.playerY,\n\n        difficulty: state.settings.difficulty,\n        mapWidth: state.settings.mapWidth,\n        mapHeight: state.settings.mapHeight,\n        viewportWidth: state.settings.viewportWidth,\n        viewportHeight: state.settings.viewportHeight,\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        moveLeft: (newPlayerX) => dispatch(ActionsGame[\"GAME/MOVE_LEFT\"](newPlayerX)),\n        moveUp: (newPlayerY) => dispatch(ActionsGame[\"GAME/MOVE_UP\"](newPlayerY)),\n        moveRight: (newPlayerX) => dispatch(ActionsGame[\"GAME/MOVE_RIGHT\"](newPlayerX)),\n        moveDown: (newPlayerY) => dispatch(ActionsGame[\"GAME/MOVE_DOWN\"](newPlayerY)),\n        changeOffsetX: (currentOffsetX) => dispatch(ActionsGame[\"GAME/CHANGE_OFFSET_X\"](currentOffsetX)),\n        changeOffsetY: (currentOffsetY) => dispatch(ActionsGame[\"GAME/CHANGE_OFFSET_Y\"](currentOffsetY)),\n        addCertificate: (points) => dispatch(ActionsGame[\"GAME/ADD_CERTIFICATE\"](points)),\n        startLevel2: ({map}) => dispatch(ActionsGame[\"GAME/START_LEVEL2\"]({map})),\n        addSkill: (points) => dispatch(ActionsGame[\"GAME/ADD_SKILL\"](points)),\n        removeBossWalls: ({map}) => dispatch(ActionsGame[\"GAME/REMOVE_BOSS_WALLS\"]({map})),\n        addPointsBoss: (points) => dispatch(ActionsGame[\"GAME/ADD_POINTS_BOSS\"](points)),\n        quitGame: () => dispatch(ActionsGame[\"GAME/QUIT_GAME\"]()),\n        endGame: () => dispatch(ActionsGame[\"GAME/END_GAME\"]()),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Game);","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Settings(\n    {\n        difficultyOptions,\n\n        difficulty,\n        mapWidth,\n        mapHeight,\n        viewportWidth,\n        viewportHeight,\n\n        backToStartMenu,\n        saveSettings,\n    }\n) {\n    const [difficultyInner, setDifficultyInner] = useState(difficulty);\n    const [mapHeightInner, setMapHeightInner] = useState(mapHeight);\n    const [viewportHeightInner, setViewportHeightInner] = useState(viewportHeight);\n\n    const DIFFICULTY = 'Difficulty';\n    const MAP_HEIGHT = 'Map Height';\n    const VIEWPORT_HEIGHT = 'Viewport Height';\n\n    function _change(name, e) {\n        switch(name) {\n            case DIFFICULTY: setDifficultyInner(+e.target.value); break;\n            case MAP_HEIGHT: setMapHeightInner(+e.target.value); break;\n            case VIEWPORT_HEIGHT: setViewportHeightInner(+e.target.value); break;\n            default: break;\n        }\n    }\n\n    function _saveSettings(e) {\n        e.preventDefault();\n        console.log({difficultyInner, mapHeightInner, viewportHeightInner});\n        saveSettings({difficultyInner, mapHeightInner, viewportHeightInner});\n    }\n\n    return (\n        <div className=\"settings\">\n            <div className=\"top-bar-head\">\n                <h3>Settings</h3>\n                <button className=\"btn-back\" type=\"text\" onClick={backToStartMenu}>Back</button>\n            </div>\n            <form className=\"settings-form\" onSubmit={_saveSettings}>\n                <div>\n                    <label htmlFor=\"difficulty\">Difficulty:</label>\n                    <select id=\"difficulty\" value={difficultyInner} onChange={_change.bind(this, DIFFICULTY)}>\n                        <option value={difficultyOptions.easy}>Easy</option>\n                        <option value={difficultyOptions.medium}>Medium</option>\n                        <option value={difficultyOptions.hard}>Hard</option>\n                    </select>\n                </div>\n                {/*<div>*/}\n                {/*    <label htmlFor=\"map-width\">Map Width:</label>*/}\n                {/*    <input id=\"map-width\" type=\"number\" value={mapWidth} min=\"10\" max=\"250\" step=\"5\" onChange={_change.bind(this, 'Map Width')} />*/}\n                {/*</div>*/}\n                <div>\n                    <label htmlFor=\"map-height\">Map Height <small>(50 - 500)</small>:</label>\n                    <input id=\"map-height\" type=\"number\" value={mapHeightInner} min=\"50\" max=\"500\" step=\"5\" onChange={_change.bind(this, MAP_HEIGHT)} />\n                </div>\n                {/*<div>*/}\n                {/*    <label htmlFor=\"viewport-width\">Viewport Width:</label>*/}\n                {/*    <input id=\"viewport-width\" type=\"number\" value={viewportWidth} min=\"10\" max=\"20\" step=\"1\" onChange={_change.bind(this, 'Viewport Width')} />*/}\n                {/*</div>*/}\n                <div>\n                    <label htmlFor=\"viewport-height\">Viewport Height <small>(10 - 20)</small>:</label>\n                    <input id=\"viewport-height\" type=\"number\" value={viewportHeightInner} min=\"10\" max=\"20\" step=\"1\" onChange={_change.bind(this, VIEWPORT_HEIGHT)} />\n                </div>\n                <button type=\"submit\" className=\"btn-save\">Save</button>\n            </form>\n        </div>\n    );\n}\n\nSettings.propTypes = {\n    difficultyOptions: PropTypes.object.isRequired,\n    difficulty: PropTypes.number.isRequired,\n    mapWidth: PropTypes.number.isRequired,\n    mapHeight: PropTypes.number.isRequired,\n    viewportWidth: PropTypes.number.isRequired,\n    viewportHeight: PropTypes.number.isRequired,\n    backToStartMenu: PropTypes.func.isRequired,\n    saveSettings: PropTypes.func.isRequired,\n};\n\nexport default Settings;","import {connect} from 'react-redux';\nimport ActionsSettings from \"../actions/settings\";\nimport gameOptions from \"../gameOptions/gameOptions\";\nimport Settings from \"../components/Settings\";\n\nconst mapStateToProps = state => {\n    return {\n        difficultyOptions: gameOptions.DIFFICULTY,\n\n        difficulty: state.settings.difficulty,\n        mapWidth: state.settings.mapWidth,\n        mapHeight: state.settings.mapHeight,\n        viewportWidth: state.settings.viewportWidth,\n        viewportHeight: state.settings.viewportHeight,\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        backToStartMenu: () => dispatch(ActionsSettings[\"SETTINGS/HIDE_SETTINGS\"]()),\n        saveSettings: ({difficultyInner, mapHeightInner, viewportHeightInner}) => dispatch(ActionsSettings[\"SETTINGS/SAVE_SETTINGS\"]({difficultyInner, mapHeightInner, viewportHeightInner})),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Settings);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StartMenu from \"./containers/StartMenu\";\nimport Game from \"./containers/Game\";\nimport Settings from \"./containers/Settings\";\n\nfunction App({isSettingsShow, gameOn, mapWidth, mapHeight}) {\n    const windowHeight = document.documentElement.clientHeight;\n    console.log('windowHeight', windowHeight);\n    const EMPTY = 'empty';\n    const WALL = 'wall';\n    const BOSS_WALL = 'boss-wall';\n\n    function generateItems(map, items, itemClass) {\n        let itemsInterval = Math.floor(mapHeight / items);\n        let itemVar = 0;\n        let itemsBalance = 0;\n        if (mapHeight % items !== 0) {\n            itemVar = 1;\n            itemsBalance = Math.ceil((mapHeight % items)) - 1;\n        }\n        console.log(`itemBalance`, itemsBalance);\n        console.log(`itemsInterval`, itemsInterval);\n        while (itemVar < mapHeight) {\n            let itemY = getRandomNumber(itemVar, itemVar + itemsInterval - 1);\n            let itemX = getRandomNumber(0, mapWidth - 1);\n            console.log(`itemVar`, itemVar);\n\n            if ( (map[itemY][itemX] === EMPTY) &&\n                !(\n                    !(itemX === 0) && !(itemX === mapWidth - 1) && !(itemY === 0) && !(itemY === mapHeight - 1) &&\n                    isWall(itemY, itemX - 1) && isWall(itemY, itemX + 1) && isWall(itemY - 1, itemX) && isWall(itemY + 1, itemX)\n                ) &&\n                !(\n                    (itemY === 0) && (itemX === 0) &&\n                    isWall(itemY, itemX + 1) && isWall(itemY + 1, itemX) && isWall(itemY, mapWidth - 1)\n                ) &&\n                !(\n                    (itemY === 0) && (itemX === mapWidth - 1) &&\n                    isWall(itemY, itemX - 1) && isWall(itemY + 1, itemX) && isWall(itemY, 0)\n                ) &&\n                !(\n                    (itemY === mapHeight - 1) && (itemX === mapWidth - 1) &&\n                    isWall(itemY, itemX - 1) && isWall(itemY - 1, itemX) && isWall(itemY, 0)\n                ) &&\n                !(\n                    (itemY === mapHeight - 1) && (itemX === 0) &&\n                    isWall(itemY, itemX + 1) && isWall(itemY - 1, itemX) && isWall(itemY, mapWidth - 1)\n                ) &&\n                !(\n                    (itemY === 0) && !(itemX === 0) && !(itemX === mapWidth - 1) &&\n                    isWall(itemY, itemX - 1) && isWall(itemY, itemX + 1) && isWall(itemY + 1, itemX)\n                ) &&\n                !(\n                    (itemY === mapHeight - 1) && !(itemX === 0) && !(itemX === mapWidth - 1) &&\n                    isWall(itemY, itemX - 1) && isWall(itemY, itemX + 1) && isWall(itemY - 1, itemX)\n                ) &&\n                !(\n                    (itemX === 0) && !(itemY === 0) && !(itemY === mapHeight - 1) &&\n                    isWall(itemY, itemX + 1) && isWall(itemY + 1, itemX) && isWall(itemY - 1, itemX)\n                ) &&\n                !(\n                    (itemX === mapWidth - 1) && !(itemY === 0) && !(itemY === mapHeight - 1) &&\n                    isWall(itemY, itemX - 1) && isWall(itemY + 1, itemX) && isWall(itemY - 1, itemX)\n                )\n            ) {\n                map[itemY][itemX] = itemClass;\n                if (itemsBalance > 0) {\n                    itemVar += itemsInterval + 1;\n                    itemsBalance--;\n                } else if (itemsBalance === 0) {\n                    itemVar += itemsInterval;\n                }\n            }\n        }\n\n        function isWall(y, x) {\n            return (map[y][x] === WALL || map[y][x] === BOSS_WALL);\n        }\n    }\n\n    function getRandomNumber(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    return (\n        <div style={{height: windowHeight + 'px'}}>\n            { (!isSettingsShow && !gameOn) && <StartMenu generateItems={generateItems} getRandomNumber={getRandomNumber}/> }\n            { gameOn && <Game windowHeight={windowHeight} generateItems={generateItems}/> }\n            { isSettingsShow && <Settings /> }\n        </div>\n    );\n}\n\nApp.propTypes = {\n    isSettingsShow: PropTypes.bool,\n    gameOn: PropTypes.bool,\n    mapWidth: PropTypes.number.isRequired,\n    mapHeight: PropTypes.number.isRequired,\n};\n\nexport default App;","import {connect} from 'react-redux';\nimport App from \"../App\";\n\nconst mapStateToProps = state => {\n    return {\n        isSettingsShow: state.settings.isSettingsShow,\n        gameOn: state.game.gameOn,\n        mapWidth: state.settings.mapWidth,\n        mapHeight: state.settings.mapHeight,\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import update from 'immutability-helper';\nimport {handleActions} from 'redux-actions';\nimport ActionsSettings from './../actions/settings';\n\nconst initialState = {\n    isSettingsShow: false,\n    difficulty: 20,\n    mapWidth: 20,\n    mapHeight: 100,\n    viewportWidth: 20,\n    viewportHeight: 10,\n};\n\nconst settingsReducer = handleActions({\n    [ActionsSettings['SETTINGS/SHOW_SETTINGS']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                isSettingsShow: true,\n            }\n        });\n    },\n    [ActionsSettings['SETTINGS/HIDE_SETTINGS']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                isSettingsShow: false,\n            }\n        });\n    },\n    [ActionsSettings['SETTINGS/SAVE_SETTINGS']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                difficulty: action.payload.difficultyInner,\n                mapHeight: action.payload.mapHeightInner,\n                viewportHeight: action.payload.viewportHeightInner,\n            }\n        });\n    },\n}, initialState);\n\nexport default settingsReducer;","import update from 'immutability-helper';\nimport {handleActions} from 'redux-actions';\nimport ActionsGame from './../actions/game';\n\nconst initialState = {\n    gameOn: false,\n    map: [],\n    certificates: 0,\n    skills: 0,\n    isDefeatedBoss: false,\n    level: 0,\n    points: 0,\n    currentOffsetX: 0,\n    currentOffsetY: 0,\n    playerX: 0,\n    playerY: 0,\n};\n\nconst gameReducer = handleActions({\n    [ActionsGame['GAME/START_GAME']]: (state, action) => {\n        console.log(action.payload);\n        return update(state, {\n            $merge: {\n                gameOn: true,\n                map: action.payload.map,\n                level: 1,\n                playerX: action.payload.playerX,\n            }\n        });\n    },\n    [ActionsGame['GAME/MOVE_LEFT']]: (state, action) => {\n        return update(state, {\n            map: {\n                 [state.playerY]: {[state.playerX]: {$set: 'empty'}, [action.payload]: {$set: 'player'}},\n            },\n            playerX: {$set: action.payload},\n        });\n    },\n    [ActionsGame['GAME/MOVE_UP']]: (state, action) => {\n        return update(state, {\n            map: {\n                [state.playerY]: {[state.playerX]: {$set: 'empty'}},\n                [action.payload]: {[state.playerX]: {$set: 'player'}}\n            },\n            playerY: {$set: action.payload},\n        });\n    },\n    [ActionsGame['GAME/MOVE_RIGHT']]: (state, action) => {\n        return update(state, {\n            map: {\n                [state.playerY]: {[state.playerX]: {$set: 'empty'}, [action.payload]: {$set: 'player'}},\n            },\n            playerX: {$set: action.payload},\n        });\n    },\n    [ActionsGame['GAME/MOVE_DOWN']]: (state, action) => {\n        return update(state, {\n            map: {\n                [state.playerY]: {[state.playerX]: {$set: 'empty'}},\n                [action.payload]: {[state.playerX]: {$set: 'player'}}\n            },\n            playerY: {$set: action.payload},\n        });\n    },\n    [ActionsGame['GAME/CHANGE_OFFSET_X']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                currentOffsetX: action.payload,\n            }\n        });\n    },\n    [ActionsGame['GAME/CHANGE_OFFSET_Y']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                currentOffsetY: action.payload,\n            }\n        });\n    },\n    [ActionsGame['GAME/ADD_CERTIFICATE']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                certificates: state.certificates + 1,\n                points: state.points + action.payload,\n            }\n        });\n    },\n    [ActionsGame['GAME/START_LEVEL2']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                map: action.payload.map,\n                level: 2,\n            }\n        });\n    },\n    [ActionsGame['GAME/ADD_SKILL']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                skills: state.skills + 1,\n                points: state.points + action.payload,\n            }\n        });\n    },\n    [ActionsGame['GAME/REMOVE_BOSS_WALLS']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                map: action.payload.map,\n            }\n        });\n    },\n    [ActionsGame['GAME/ADD_POINTS_BOSS']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                points: state.points + action.payload,\n            }\n        });\n    },\n    [ActionsGame['GAME/QUIT_GAME']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                gameOn: initialState.gameOn,\n                map: initialState.map,\n                certificates: initialState.certificates,\n                skills: initialState.skills,\n                isDefeatedBoss: initialState.isDefeatedBoss,\n                level: initialState.level,\n                points: initialState.points,\n                currentOffsetY: initialState.currentOffsetY,\n                playerX: initialState.playerX,\n                playerY: initialState.playerY,\n            }\n        });\n    },\n    [ActionsGame['GAME/END_GAME']]: (state, action) => {\n        return update(state, {\n            $merge: {\n                isDefeatedBoss: true,\n            }\n        });\n    },\n}, initialState);\n\nexport default gameReducer;","import { combineReducers } from 'redux'\n\nimport settings from './settings';\nimport game from './game';\n\nexport default combineReducers({ settings, game });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware} from 'redux'\nimport reducer from './reducers';\nimport {Provider} from 'react-redux';\nimport logger from 'redux-logger';\n\nconst store = createStore(reducer, applyMiddleware(logger));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}